# Generated by Django 3.0.3 on 2020-03-02 20:33
from django.apps import apps
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone



class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    Group = apps.get_model("auth", "Group")

    def create_groups(self):
        for group in ("superusers", "teachers", "students"):
            self.Group.objects.get_or_create(name=group)

    operations = [
        migrations.RunPython(create_groups),

        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=40, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128, unique=True)),
                ('students', models.ManyToManyField(blank=True, related_name='course_students', to=settings.AUTH_USER_MODEL)),
                ('teachers', models.ManyToManyField(related_name='course_teachers', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Homework',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128)),
                ('text', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='HomeworkInstance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(null=True, upload_to='done_homeworks/')),
                ('is_done', models.BooleanField(default=False)),
                ('homework', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='elearn_app.Homework')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('homework_id', 'student_id')},
            },
        ),
        migrations.CreateModel(
            name='Lecture',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128)),
                ('file', models.FileField(upload_to='lectures/')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='elearn_app.Course')),
            ],
            options={
                'unique_together': {('course_id', 'title')},
            },
        ),
        migrations.CreateModel(
            name='HomeworkInstanceMark',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark', models.SmallIntegerField(null=True)),
                ('homework_instance', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='elearn_app.HomeworkInstance')),
            ],
        ),
        migrations.CreateModel(
            name='HomeworkInstanceComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('body', models.TextField()),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('homework_instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='elearn_app.HomeworkInstance')),
            ],
            options={
                'ordering': ['created_on'],
            },
        ),
        migrations.AddField(
            model_name='homework',
            name='lecture',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='elearn_app.Lecture'),
        ),
        migrations.AlterUniqueTogether(
            name='homework',
            unique_together={('lecture_id', 'title')},
        ),
    ]



